generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../db/app.db"
}

model CaddyConfiguration {
  id        String   @id @default(cuid())
  config    Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Domains {
  id                 String   @id @default(cuid())
  incomingAddress    String   @unique
  destinationAddress String
  port               Int
  isLocked           Boolean  @default(false)
  enableHttps        Boolean  @default(true)
  redirectUrl        String?
  createdAt          DateTime @default(now())
}

model User {
  id                  String        @id @default(cuid())
  username            String        @unique
  hashedPassword      String
  forcePasswordChange Boolean       @default(false)
  createdAt           DateTime      @default(now())
  roleId              String?
  role                Role?         @relation(fields: [roleId], references: [id])
  isAdmin             Boolean       @default(false)
}

model ApiKeys {
  key       String   @id @default(cuid())
  name      String   
  createdAt DateTime @default(now())
}

model Role {
  id          String           @id @default(cuid())
  name        String           @unique
  description String?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  users       User[]
  permissions RolePermission[]
}

model Permission {
  id          String           @id @default(cuid())
  name        String           @unique
  description String?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  roles       RolePermission[]
}

model RolePermission {
  roleId       String
  permissionId String
  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  createdAt    DateTime   @default(now())

  @@id([roleId, permissionId])
}
